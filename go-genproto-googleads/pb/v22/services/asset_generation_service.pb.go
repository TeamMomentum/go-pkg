// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.7
// source: google/ads/googleads/v22/services/asset_generation_service.proto

package services

import (
	context "context"
	enums "github.com/TeamMomentum/go-pkg/go-genproto-googleads/pb/v22/enums"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for
// [AssetGenerationService.GenerateText][google.ads.googleads.v22.services.AssetGenerationService.GenerateText]
type GenerateTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The ID of the customer to generate assets for. Required.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// Required. Which field types text is being generated for. Supported values
	// are: HEADLINE, LONG_HEADLINE, DESCRIPTION. Required.
	AssetFieldTypes []enums.AssetFieldTypeEnum_AssetFieldType `protobuf:"varint,2,rep,packed,name=asset_field_types,json=assetFieldTypes,proto3,enum=google.ads.googleads.v22.enums.AssetFieldTypeEnum_AssetFieldType" json:"asset_field_types,omitempty"`
	// Optional. Final url to use as a source for generating assets.
	// Required if existing_generation_context is not provided
	// or does not have a final url associated with it.
	FinalUrl string `protobuf:"bytes,5,opt,name=final_url,json=finalUrl,proto3" json:"final_url,omitempty"`
	// Optional. A freeform description of what assets should be generated.
	// The string length must be between 1 and 1500, inclusive.
	FreeformPrompt string `protobuf:"bytes,6,opt,name=freeform_prompt,json=freeformPrompt,proto3" json:"freeform_prompt,omitempty"`
	// Optional. A freeform list of keywords that are relevant,
	// used to inform asset generation.
	Keywords []string `protobuf:"bytes,7,rep,name=keywords,proto3" json:"keywords,omitempty"`
	// Additional context to guide the generation process.
	//
	// Types that are assignable to Context:
	//
	//	*GenerateTextRequest_ExistingGenerationContext
	//	*GenerateTextRequest_AdvertisingChannelType
	Context isGenerateTextRequest_Context `protobuf_oneof:"context"`
}

func (x *GenerateTextRequest) Reset() {
	*x = GenerateTextRequest{}
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTextRequest) ProtoMessage() {}

func (x *GenerateTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTextRequest.ProtoReflect.Descriptor instead.
func (*GenerateTextRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateTextRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *GenerateTextRequest) GetAssetFieldTypes() []enums.AssetFieldTypeEnum_AssetFieldType {
	if x != nil {
		return x.AssetFieldTypes
	}
	return nil
}

func (x *GenerateTextRequest) GetFinalUrl() string {
	if x != nil {
		return x.FinalUrl
	}
	return ""
}

func (x *GenerateTextRequest) GetFreeformPrompt() string {
	if x != nil {
		return x.FreeformPrompt
	}
	return ""
}

func (x *GenerateTextRequest) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (m *GenerateTextRequest) GetContext() isGenerateTextRequest_Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (x *GenerateTextRequest) GetExistingGenerationContext() *AssetGenerationExistingContext {
	if x, ok := x.GetContext().(*GenerateTextRequest_ExistingGenerationContext); ok {
		return x.ExistingGenerationContext
	}
	return nil
}

func (x *GenerateTextRequest) GetAdvertisingChannelType() enums.AdvertisingChannelTypeEnum_AdvertisingChannelType {
	if x, ok := x.GetContext().(*GenerateTextRequest_AdvertisingChannelType); ok {
		return x.AdvertisingChannelType
	}
	return enums.AdvertisingChannelTypeEnum_AdvertisingChannelType(0)
}

type isGenerateTextRequest_Context interface {
	isGenerateTextRequest_Context()
}

type GenerateTextRequest_ExistingGenerationContext struct {
	// Optional. The setting for which assets are being generated, such as an
	// existing AssetGroup or AdGroupAd.
	ExistingGenerationContext *AssetGenerationExistingContext `protobuf:"bytes,3,opt,name=existing_generation_context,json=existingGenerationContext,proto3,oneof"`
}

type GenerateTextRequest_AdvertisingChannelType struct {
	// Optional. The advertising channel for which to generate assets. Required
	// if existing_context is not provided.
	//
	// Supported channel types:
	// SEARCH, PERFORMANCE_MAX, DISPLAY, and DEMAND_GEN
	AdvertisingChannelType enums.AdvertisingChannelTypeEnum_AdvertisingChannelType `protobuf:"varint,4,opt,name=advertising_channel_type,json=advertisingChannelType,proto3,enum=google.ads.googleads.v22.enums.AdvertisingChannelTypeEnum_AdvertisingChannelType,oneof"`
}

func (*GenerateTextRequest_ExistingGenerationContext) isGenerateTextRequest_Context() {}

func (*GenerateTextRequest_AdvertisingChannelType) isGenerateTextRequest_Context() {}

// Response message for
// [AssetGenerationService.GenerateText][google.ads.googleads.v22.services.AssetGenerationService.GenerateText]
type GenerateTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of text that was generated and the field type to use it as.
	GeneratedText []*GeneratedText `protobuf:"bytes,1,rep,name=generated_text,json=generatedText,proto3" json:"generated_text,omitempty"`
}

func (x *GenerateTextResponse) Reset() {
	*x = GenerateTextResponse{}
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTextResponse) ProtoMessage() {}

func (x *GenerateTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTextResponse.ProtoReflect.Descriptor instead.
func (*GenerateTextResponse) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateTextResponse) GetGeneratedText() []*GeneratedText {
	if x != nil {
		return x.GeneratedText
	}
	return nil
}

// Data and metadata about a piece of generated text.
type GeneratedText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A string of text that was generated.
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// The type of asset this text is intended to be used as.
	AssetFieldType enums.AssetFieldTypeEnum_AssetFieldType `protobuf:"varint,2,opt,name=asset_field_type,json=assetFieldType,proto3,enum=google.ads.googleads.v22.enums.AssetFieldTypeEnum_AssetFieldType" json:"asset_field_type,omitempty"`
}

func (x *GeneratedText) Reset() {
	*x = GeneratedText{}
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneratedText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratedText) ProtoMessage() {}

func (x *GeneratedText) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratedText.ProtoReflect.Descriptor instead.
func (*GeneratedText) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescGZIP(), []int{2}
}

func (x *GeneratedText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *GeneratedText) GetAssetFieldType() enums.AssetFieldTypeEnum_AssetFieldType {
	if x != nil {
		return x.AssetFieldType
	}
	return enums.AssetFieldTypeEnum_AssetFieldType(0)
}

// Request message for
// [AssetGenerationService.GenerateImages][google.ads.googleads.v22.services.AssetGenerationService.GenerateImages]
type GenerateImagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. The ID of the customer for whom the images are being generated.
	// Required.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// Optional. Output field types for generated images. Supported values are
	// MARKETING_IMAGE, SQUARE_MARKETING_IMAGE, PORTRAIT_MARKETING_IMAGE, and
	// TALL_PORTRAIT_MARKETING_IMAGE. All specified field types must be
	// compatible with the `advertising_channel_type` or
	// `existing_generation_context` (whichever is set). If no field types are
	// provided, images will be generated for all compatible field types.
	AssetFieldTypes []enums.AssetFieldTypeEnum_AssetFieldType `protobuf:"varint,4,rep,packed,name=asset_field_types,json=assetFieldTypes,proto3,enum=google.ads.googleads.v22.enums.AssetFieldTypeEnum_AssetFieldType" json:"asset_field_types,omitempty"`
	// Additional context to guide image generation.
	//
	// Types that are assignable to Context:
	//
	//	*GenerateImagesRequest_AdvertisingChannelType
	Context isGenerateImagesRequest_Context `protobuf_oneof:"context"`
	// Type of image generation to apply. Required.
	//
	// Types that are assignable to GenerationType:
	//
	//	*GenerateImagesRequest_FinalUrlGeneration
	//	*GenerateImagesRequest_FreeformGeneration
	//	*GenerateImagesRequest_ProductRecontextGeneration
	GenerationType isGenerateImagesRequest_GenerationType `protobuf_oneof:"generation_type"`
}

func (x *GenerateImagesRequest) Reset() {
	*x = GenerateImagesRequest{}
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateImagesRequest) ProtoMessage() {}

func (x *GenerateImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateImagesRequest.ProtoReflect.Descriptor instead.
func (*GenerateImagesRequest) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescGZIP(), []int{3}
}

func (x *GenerateImagesRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *GenerateImagesRequest) GetAssetFieldTypes() []enums.AssetFieldTypeEnum_AssetFieldType {
	if x != nil {
		return x.AssetFieldTypes
	}
	return nil
}

func (m *GenerateImagesRequest) GetContext() isGenerateImagesRequest_Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (x *GenerateImagesRequest) GetAdvertisingChannelType() enums.AdvertisingChannelTypeEnum_AdvertisingChannelType {
	if x, ok := x.GetContext().(*GenerateImagesRequest_AdvertisingChannelType); ok {
		return x.AdvertisingChannelType
	}
	return enums.AdvertisingChannelTypeEnum_AdvertisingChannelType(0)
}

func (m *GenerateImagesRequest) GetGenerationType() isGenerateImagesRequest_GenerationType {
	if m != nil {
		return m.GenerationType
	}
	return nil
}

func (x *GenerateImagesRequest) GetFinalUrlGeneration() *FinalUrlImageGenerationInput {
	if x, ok := x.GetGenerationType().(*GenerateImagesRequest_FinalUrlGeneration); ok {
		return x.FinalUrlGeneration
	}
	return nil
}

func (x *GenerateImagesRequest) GetFreeformGeneration() *FreeformImageGenerationInput {
	if x, ok := x.GetGenerationType().(*GenerateImagesRequest_FreeformGeneration); ok {
		return x.FreeformGeneration
	}
	return nil
}

func (x *GenerateImagesRequest) GetProductRecontextGeneration() *ProductRecontextGenerationImageInput {
	if x, ok := x.GetGenerationType().(*GenerateImagesRequest_ProductRecontextGeneration); ok {
		return x.ProductRecontextGeneration
	}
	return nil
}

type isGenerateImagesRequest_Context interface {
	isGenerateImagesRequest_Context()
}

type GenerateImagesRequest_AdvertisingChannelType struct {
	// Optional. The advertising channel type for which the images are being
	// generated. This field is required if `existing_generation_context` is not
	// provided. Supported channel types include SEARCH, PERFORMANCE_MAX,
	// DISPLAY, and DEMAND_GEN.
	AdvertisingChannelType enums.AdvertisingChannelTypeEnum_AdvertisingChannelType `protobuf:"varint,2,opt,name=advertising_channel_type,json=advertisingChannelType,proto3,enum=google.ads.googleads.v22.enums.AdvertisingChannelTypeEnum_AdvertisingChannelType,oneof"`
}

func (*GenerateImagesRequest_AdvertisingChannelType) isGenerateImagesRequest_Context() {}

type isGenerateImagesRequest_GenerationType interface {
	isGenerateImagesRequest_GenerationType()
}

type GenerateImagesRequest_FinalUrlGeneration struct {
	// Optional. Generate images from a final url.
	FinalUrlGeneration *FinalUrlImageGenerationInput `protobuf:"bytes,5,opt,name=final_url_generation,json=finalUrlGeneration,proto3,oneof"`
}

type GenerateImagesRequest_FreeformGeneration struct {
	// Optional. Generate images from a freeform prompt.
	FreeformGeneration *FreeformImageGenerationInput `protobuf:"bytes,6,opt,name=freeform_generation,json=freeformGeneration,proto3,oneof"`
}

type GenerateImagesRequest_ProductRecontextGeneration struct {
	// Optional. Generate new images by recontextualizing existing product
	// images.
	ProductRecontextGeneration *ProductRecontextGenerationImageInput `protobuf:"bytes,7,opt,name=product_recontext_generation,json=productRecontextGeneration,proto3,oneof"`
}

func (*GenerateImagesRequest_FinalUrlGeneration) isGenerateImagesRequest_GenerationType() {}

func (*GenerateImagesRequest_FreeformGeneration) isGenerateImagesRequest_GenerationType() {}

func (*GenerateImagesRequest_ProductRecontextGeneration) isGenerateImagesRequest_GenerationType() {}

// Input for guiding image asset generation with a final url.
type FinalUrlImageGenerationInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. A final url to guide the image generation process. Required.
	FinalUrl string `protobuf:"bytes,1,opt,name=final_url,json=finalUrl,proto3" json:"final_url,omitempty"`
}

func (x *FinalUrlImageGenerationInput) Reset() {
	*x = FinalUrlImageGenerationInput{}
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalUrlImageGenerationInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalUrlImageGenerationInput) ProtoMessage() {}

func (x *FinalUrlImageGenerationInput) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalUrlImageGenerationInput.ProtoReflect.Descriptor instead.
func (*FinalUrlImageGenerationInput) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescGZIP(), []int{4}
}

func (x *FinalUrlImageGenerationInput) GetFinalUrl() string {
	if x != nil {
		return x.FinalUrl
	}
	return ""
}

// Input for guiding image asset generation with a freeform prompt.
type FreeformImageGenerationInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required. A freeform text description to guide the image generation
	// process. The maximum length is 1500 characters. Required.
	FreeformPrompt string `protobuf:"bytes,1,opt,name=freeform_prompt,json=freeformPrompt,proto3" json:"freeform_prompt,omitempty"`
}

func (x *FreeformImageGenerationInput) Reset() {
	*x = FreeformImageGenerationInput{}
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreeformImageGenerationInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeformImageGenerationInput) ProtoMessage() {}

func (x *FreeformImageGenerationInput) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeformImageGenerationInput.ProtoReflect.Descriptor instead.
func (*FreeformImageGenerationInput) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescGZIP(), []int{5}
}

func (x *FreeformImageGenerationInput) GetFreeformPrompt() string {
	if x != nil {
		return x.FreeformPrompt
	}
	return ""
}

// Input for generating new images by recontextualizing existing product images.
type ProductRecontextGenerationImageInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional. A freeform description of the assets to be generated.
	// Maximum character limit is 1500.
	Prompt string `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
	// Required. Product images to use for generating new images.
	// 1-3 images must be provided.
	SourceImages []*SourceImage `protobuf:"bytes,2,rep,name=source_images,json=sourceImages,proto3" json:"source_images,omitempty"`
}

func (x *ProductRecontextGenerationImageInput) Reset() {
	*x = ProductRecontextGenerationImageInput{}
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductRecontextGenerationImageInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductRecontextGenerationImageInput) ProtoMessage() {}

func (x *ProductRecontextGenerationImageInput) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductRecontextGenerationImageInput.ProtoReflect.Descriptor instead.
func (*ProductRecontextGenerationImageInput) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescGZIP(), []int{6}
}

func (x *ProductRecontextGenerationImageInput) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *ProductRecontextGenerationImageInput) GetSourceImages() []*SourceImage {
	if x != nil {
		return x.SourceImages
	}
	return nil
}

// Response message for
// [AssetGenerationService.GenerateImages][google.ads.googleads.v22.services.AssetGenerationService.GenerateImages]
type GenerateImagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Successfully generated images.
	GeneratedImages []*GeneratedImage `protobuf:"bytes,1,rep,name=generated_images,json=generatedImages,proto3" json:"generated_images,omitempty"`
}

func (x *GenerateImagesResponse) Reset() {
	*x = GenerateImagesResponse{}
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateImagesResponse) ProtoMessage() {}

func (x *GenerateImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateImagesResponse.ProtoReflect.Descriptor instead.
func (*GenerateImagesResponse) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescGZIP(), []int{7}
}

func (x *GenerateImagesResponse) GetGeneratedImages() []*GeneratedImage {
	if x != nil {
		return x.GeneratedImages
	}
	return nil
}

// A source image to be used in the generation process.
type SourceImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The image to be used as a source.
	//
	// Types that are assignable to Image:
	//
	//	*SourceImage_ImageData
	Image isSourceImage_Image `protobuf_oneof:"image"`
}

func (x *SourceImage) Reset() {
	*x = SourceImage{}
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceImage) ProtoMessage() {}

func (x *SourceImage) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceImage.ProtoReflect.Descriptor instead.
func (*SourceImage) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescGZIP(), []int{8}
}

func (m *SourceImage) GetImage() isSourceImage_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (x *SourceImage) GetImageData() []byte {
	if x, ok := x.GetImage().(*SourceImage_ImageData); ok {
		return x.ImageData
	}
	return nil
}

type isSourceImage_Image interface {
	isSourceImage_Image()
}

type SourceImage_ImageData struct {
	// Optional. Raw bytes of the image to use.
	ImageData []byte `protobuf:"bytes,1,opt,name=image_data,json=imageData,proto3,oneof"`
}

func (*SourceImage_ImageData) isSourceImage_Image() {}

// Generated image data and metadata.
type GeneratedImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A temporary URL for the generated image.
	ImageTemporaryUrl string `protobuf:"bytes,1,opt,name=image_temporary_url,json=imageTemporaryUrl,proto3" json:"image_temporary_url,omitempty"`
	// The intended field type for this generated image.
	AssetFieldType enums.AssetFieldTypeEnum_AssetFieldType `protobuf:"varint,2,opt,name=asset_field_type,json=assetFieldType,proto3,enum=google.ads.googleads.v22.enums.AssetFieldTypeEnum_AssetFieldType" json:"asset_field_type,omitempty"`
}

func (x *GeneratedImage) Reset() {
	*x = GeneratedImage{}
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneratedImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratedImage) ProtoMessage() {}

func (x *GeneratedImage) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratedImage.ProtoReflect.Descriptor instead.
func (*GeneratedImage) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescGZIP(), []int{9}
}

func (x *GeneratedImage) GetImageTemporaryUrl() string {
	if x != nil {
		return x.ImageTemporaryUrl
	}
	return ""
}

func (x *GeneratedImage) GetAssetFieldType() enums.AssetFieldTypeEnum_AssetFieldType {
	if x != nil {
		return x.AssetFieldType
	}
	return enums.AssetFieldTypeEnum_AssetFieldType(0)
}

// The context for which assets are being generated, such as an existing
// AssetGroup or AdGroupAd.
type AssetGenerationExistingContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An existing context to generate assets for.
	//
	// Types that are assignable to ExistingContext:
	//
	//	*AssetGenerationExistingContext_ExistingAssetGroup
	//	*AssetGenerationExistingContext_ExistingAdGroupAd
	ExistingContext isAssetGenerationExistingContext_ExistingContext `protobuf_oneof:"existing_context"`
}

func (x *AssetGenerationExistingContext) Reset() {
	*x = AssetGenerationExistingContext{}
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssetGenerationExistingContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetGenerationExistingContext) ProtoMessage() {}

func (x *AssetGenerationExistingContext) ProtoReflect() protoreflect.Message {
	mi := &file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetGenerationExistingContext.ProtoReflect.Descriptor instead.
func (*AssetGenerationExistingContext) Descriptor() ([]byte, []int) {
	return file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescGZIP(), []int{10}
}

func (m *AssetGenerationExistingContext) GetExistingContext() isAssetGenerationExistingContext_ExistingContext {
	if m != nil {
		return m.ExistingContext
	}
	return nil
}

func (x *AssetGenerationExistingContext) GetExistingAssetGroup() string {
	if x, ok := x.GetExistingContext().(*AssetGenerationExistingContext_ExistingAssetGroup); ok {
		return x.ExistingAssetGroup
	}
	return ""
}

func (x *AssetGenerationExistingContext) GetExistingAdGroupAd() string {
	if x, ok := x.GetExistingContext().(*AssetGenerationExistingContext_ExistingAdGroupAd); ok {
		return x.ExistingAdGroupAd
	}
	return ""
}

type isAssetGenerationExistingContext_ExistingContext interface {
	isAssetGenerationExistingContext_ExistingContext()
}

type AssetGenerationExistingContext_ExistingAssetGroup struct {
	// Resource name of an existing AssetGroup for which these assets are being
	// generated.
	ExistingAssetGroup string `protobuf:"bytes,1,opt,name=existing_asset_group,json=existingAssetGroup,proto3,oneof"`
}

type AssetGenerationExistingContext_ExistingAdGroupAd struct {
	// Resource name of an existing AdGroupAd for which these assets are being
	// generated.
	ExistingAdGroupAd string `protobuf:"bytes,2,opt,name=existing_ad_group_ad,json=existingAdGroupAd,proto3,oneof"`
}

func (*AssetGenerationExistingContext_ExistingAssetGroup) isAssetGenerationExistingContext_ExistingContext() {
}

func (*AssetGenerationExistingContext_ExistingAdGroupAd) isAssetGenerationExistingContext_ExistingContext() {
}

var File_google_ads_googleads_v22_services_asset_generation_service_proto protoreflect.FileDescriptor

var file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDesc = []byte{
	0x0a, 0x40, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x32, 0x32, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x21, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x32, 0x32, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x3d, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64,
	0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x32, 0x32, 0x2f,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x73,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76, 0x32, 0x32, 0x2f, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb,
	0x04, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x72, 0x0a, 0x11,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76,
	0x32, 0x32, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x0f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x20, 0x0a, 0x09, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x55,
	0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x0f, 0x66, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x70,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01,
	0x52, 0x0e, 0x66, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x12, 0x1f, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x88, 0x01, 0x0a, 0x1b, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76,
	0x32, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48,
	0x00, 0x52, 0x19, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x92, 0x01, 0x0a,
	0x18, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x51, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x32, 0x32, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x16, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x6f, 0x0a, 0x14,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x64, 0x73, 0x2e, 0x76, 0x32, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0d,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x22, 0x90, 0x01,
	0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x6b, 0x0a, 0x10, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x32, 0x32, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75,
	0x6d, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xea, 0x05, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x72, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2e, 0x76, 0x32, 0x32, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x92, 0x01, 0x0a, 0x18, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x73, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x51, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76,
	0x32, 0x32, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x73, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x2e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48,
	0x00, 0x52, 0x16, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x78, 0x0a, 0x14, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76,
	0x32, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x55, 0x72, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52,
	0x12, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x77, 0x0a, 0x13, 0x66, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x32, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x12, 0x66, 0x72, 0x65, 0x65, 0x66, 0x6f,
	0x72, 0x6d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x90, 0x01, 0x0a,
	0x1c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x32, 0x32, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x03, 0xe0, 0x41,
	0x01, 0x48, 0x01, 0x52, 0x1a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x40, 0x0a,
	0x1c, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a,
	0x09, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x22,
	0x4c, 0x0a, 0x1c, 0x46, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x2c, 0x0a, 0x0f, 0x66, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0e, 0x66,
	0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x22, 0x9d, 0x01,
	0x0a, 0x24, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x06, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x12, 0x58, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x2e, 0x76, 0x32, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x76, 0x0a,
	0x16, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x32, 0x32, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x0b, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72,
	0x61, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x6b, 0x0a, 0x10, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x32, 0x32, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x1e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x5c, 0x0a, 0x14, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x28, 0xfa, 0x41, 0x25, 0x0a, 0x23, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00,
	0x52, 0x12, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x5a, 0x0a, 0x14, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x27, 0xfa, 0x41, 0x24, 0x0a, 0x22, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x41, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x48, 0x00, 0x52, 0x11, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64,
	0x42, 0x12, 0x0a, 0x10, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x32, 0xfd, 0x03, 0x0a, 0x16, 0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0xc8, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x32, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e,
	0x76, 0x32, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x47, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x41, 0x3a, 0x01, 0x2a, 0x22, 0x3c, 0x2f, 0x76,
	0x32, 0x32, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x2f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0xd0, 0x01, 0x0a, 0x0e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x38, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x32, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76,
	0x32, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x49, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x43, 0x3a, 0x01, 0x2a, 0x22, 0x3e, 0x2f,
	0x76, 0x32, 0x32, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x3d, 0x2a, 0x7d, 0x2f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x45, 0xca,
	0x41, 0x18, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0xd2, 0x41, 0x27, 0x68, 0x74, 0x74,
	0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x61, 0x64, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x42, 0x87, 0x02, 0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61, 0x64,
	0x73, 0x2e, 0x76, 0x32, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x42, 0x1b,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x49, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x64, 0x73, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x61,
	0x64, 0x73, 0x2f, 0x76, 0x32, 0x32, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x47, 0x41, 0x41, 0xaa, 0x02,
	0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x41, 0x64, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x41, 0x64, 0x73, 0x2e, 0x56, 0x32, 0x32, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0xca, 0x02, 0x21, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5c, 0x41, 0x64, 0x73, 0x5c,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x73, 0x5c, 0x56, 0x32, 0x32, 0x5c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0xea, 0x02, 0x25, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x3a,
	0x3a, 0x41, 0x64, 0x73, 0x3a, 0x3a, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x73, 0x3a,
	0x3a, 0x56, 0x32, 0x32, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescOnce sync.Once
	file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescData = file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDesc
)

func file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescGZIP() []byte {
	file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescOnce.Do(func() {
		file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescData)
	})
	return file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDescData
}

var file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_google_ads_googleads_v22_services_asset_generation_service_proto_goTypes = []any{
	(*GenerateTextRequest)(nil),                                  // 0: google.ads.googleads.v22.services.GenerateTextRequest
	(*GenerateTextResponse)(nil),                                 // 1: google.ads.googleads.v22.services.GenerateTextResponse
	(*GeneratedText)(nil),                                        // 2: google.ads.googleads.v22.services.GeneratedText
	(*GenerateImagesRequest)(nil),                                // 3: google.ads.googleads.v22.services.GenerateImagesRequest
	(*FinalUrlImageGenerationInput)(nil),                         // 4: google.ads.googleads.v22.services.FinalUrlImageGenerationInput
	(*FreeformImageGenerationInput)(nil),                         // 5: google.ads.googleads.v22.services.FreeformImageGenerationInput
	(*ProductRecontextGenerationImageInput)(nil),                 // 6: google.ads.googleads.v22.services.ProductRecontextGenerationImageInput
	(*GenerateImagesResponse)(nil),                               // 7: google.ads.googleads.v22.services.GenerateImagesResponse
	(*SourceImage)(nil),                                          // 8: google.ads.googleads.v22.services.SourceImage
	(*GeneratedImage)(nil),                                       // 9: google.ads.googleads.v22.services.GeneratedImage
	(*AssetGenerationExistingContext)(nil),                       // 10: google.ads.googleads.v22.services.AssetGenerationExistingContext
	(enums.AssetFieldTypeEnum_AssetFieldType)(0),                 // 11: google.ads.googleads.v22.enums.AssetFieldTypeEnum.AssetFieldType
	(enums.AdvertisingChannelTypeEnum_AdvertisingChannelType)(0), // 12: google.ads.googleads.v22.enums.AdvertisingChannelTypeEnum.AdvertisingChannelType
}
var file_google_ads_googleads_v22_services_asset_generation_service_proto_depIdxs = []int32{
	11, // 0: google.ads.googleads.v22.services.GenerateTextRequest.asset_field_types:type_name -> google.ads.googleads.v22.enums.AssetFieldTypeEnum.AssetFieldType
	10, // 1: google.ads.googleads.v22.services.GenerateTextRequest.existing_generation_context:type_name -> google.ads.googleads.v22.services.AssetGenerationExistingContext
	12, // 2: google.ads.googleads.v22.services.GenerateTextRequest.advertising_channel_type:type_name -> google.ads.googleads.v22.enums.AdvertisingChannelTypeEnum.AdvertisingChannelType
	2,  // 3: google.ads.googleads.v22.services.GenerateTextResponse.generated_text:type_name -> google.ads.googleads.v22.services.GeneratedText
	11, // 4: google.ads.googleads.v22.services.GeneratedText.asset_field_type:type_name -> google.ads.googleads.v22.enums.AssetFieldTypeEnum.AssetFieldType
	11, // 5: google.ads.googleads.v22.services.GenerateImagesRequest.asset_field_types:type_name -> google.ads.googleads.v22.enums.AssetFieldTypeEnum.AssetFieldType
	12, // 6: google.ads.googleads.v22.services.GenerateImagesRequest.advertising_channel_type:type_name -> google.ads.googleads.v22.enums.AdvertisingChannelTypeEnum.AdvertisingChannelType
	4,  // 7: google.ads.googleads.v22.services.GenerateImagesRequest.final_url_generation:type_name -> google.ads.googleads.v22.services.FinalUrlImageGenerationInput
	5,  // 8: google.ads.googleads.v22.services.GenerateImagesRequest.freeform_generation:type_name -> google.ads.googleads.v22.services.FreeformImageGenerationInput
	6,  // 9: google.ads.googleads.v22.services.GenerateImagesRequest.product_recontext_generation:type_name -> google.ads.googleads.v22.services.ProductRecontextGenerationImageInput
	8,  // 10: google.ads.googleads.v22.services.ProductRecontextGenerationImageInput.source_images:type_name -> google.ads.googleads.v22.services.SourceImage
	9,  // 11: google.ads.googleads.v22.services.GenerateImagesResponse.generated_images:type_name -> google.ads.googleads.v22.services.GeneratedImage
	11, // 12: google.ads.googleads.v22.services.GeneratedImage.asset_field_type:type_name -> google.ads.googleads.v22.enums.AssetFieldTypeEnum.AssetFieldType
	0,  // 13: google.ads.googleads.v22.services.AssetGenerationService.GenerateText:input_type -> google.ads.googleads.v22.services.GenerateTextRequest
	3,  // 14: google.ads.googleads.v22.services.AssetGenerationService.GenerateImages:input_type -> google.ads.googleads.v22.services.GenerateImagesRequest
	1,  // 15: google.ads.googleads.v22.services.AssetGenerationService.GenerateText:output_type -> google.ads.googleads.v22.services.GenerateTextResponse
	7,  // 16: google.ads.googleads.v22.services.AssetGenerationService.GenerateImages:output_type -> google.ads.googleads.v22.services.GenerateImagesResponse
	15, // [15:17] is the sub-list for method output_type
	13, // [13:15] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_google_ads_googleads_v22_services_asset_generation_service_proto_init() }
func file_google_ads_googleads_v22_services_asset_generation_service_proto_init() {
	if File_google_ads_googleads_v22_services_asset_generation_service_proto != nil {
		return
	}
	file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[0].OneofWrappers = []any{
		(*GenerateTextRequest_ExistingGenerationContext)(nil),
		(*GenerateTextRequest_AdvertisingChannelType)(nil),
	}
	file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[3].OneofWrappers = []any{
		(*GenerateImagesRequest_AdvertisingChannelType)(nil),
		(*GenerateImagesRequest_FinalUrlGeneration)(nil),
		(*GenerateImagesRequest_FreeformGeneration)(nil),
		(*GenerateImagesRequest_ProductRecontextGeneration)(nil),
	}
	file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[8].OneofWrappers = []any{
		(*SourceImage_ImageData)(nil),
	}
	file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes[10].OneofWrappers = []any{
		(*AssetGenerationExistingContext_ExistingAssetGroup)(nil),
		(*AssetGenerationExistingContext_ExistingAdGroupAd)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_google_ads_googleads_v22_services_asset_generation_service_proto_goTypes,
		DependencyIndexes: file_google_ads_googleads_v22_services_asset_generation_service_proto_depIdxs,
		MessageInfos:      file_google_ads_googleads_v22_services_asset_generation_service_proto_msgTypes,
	}.Build()
	File_google_ads_googleads_v22_services_asset_generation_service_proto = out.File
	file_google_ads_googleads_v22_services_asset_generation_service_proto_rawDesc = nil
	file_google_ads_googleads_v22_services_asset_generation_service_proto_goTypes = nil
	file_google_ads_googleads_v22_services_asset_generation_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AssetGenerationServiceClient is the client API for AssetGenerationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AssetGenerationServiceClient interface {
	// Uses generative AI to generate text that can be used as assets in a
	// campaign.
	//
	// List of thrown errors:
	//
	//	[AuthenticationError]()
	//	[AuthorizationError]()
	//	[AssetGenerationError]()
	//	[HeaderError]()
	//	[InternalError]()
	//	[QuotaError]()
	//	[RequestError]()
	GenerateText(ctx context.Context, in *GenerateTextRequest, opts ...grpc.CallOption) (*GenerateTextResponse, error)
	// Uses generative AI to generate images that can be used as assets in a
	// campaign.
	//
	// List of thrown errors:
	//
	//	[AuthenticationError]()
	//	[AuthorizationError]()
	//	[AssetGenerationError]()
	//	[HeaderError]()
	//	[InternalError]()
	//	[QuotaError]()
	//	[RequestError]()
	GenerateImages(ctx context.Context, in *GenerateImagesRequest, opts ...grpc.CallOption) (*GenerateImagesResponse, error)
}

type assetGenerationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAssetGenerationServiceClient(cc grpc.ClientConnInterface) AssetGenerationServiceClient {
	return &assetGenerationServiceClient{cc}
}

func (c *assetGenerationServiceClient) GenerateText(ctx context.Context, in *GenerateTextRequest, opts ...grpc.CallOption) (*GenerateTextResponse, error) {
	out := new(GenerateTextResponse)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v22.services.AssetGenerationService/GenerateText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetGenerationServiceClient) GenerateImages(ctx context.Context, in *GenerateImagesRequest, opts ...grpc.CallOption) (*GenerateImagesResponse, error) {
	out := new(GenerateImagesResponse)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v22.services.AssetGenerationService/GenerateImages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AssetGenerationServiceServer is the server API for AssetGenerationService service.
type AssetGenerationServiceServer interface {
	// Uses generative AI to generate text that can be used as assets in a
	// campaign.
	//
	// List of thrown errors:
	//
	//	[AuthenticationError]()
	//	[AuthorizationError]()
	//	[AssetGenerationError]()
	//	[HeaderError]()
	//	[InternalError]()
	//	[QuotaError]()
	//	[RequestError]()
	GenerateText(context.Context, *GenerateTextRequest) (*GenerateTextResponse, error)
	// Uses generative AI to generate images that can be used as assets in a
	// campaign.
	//
	// List of thrown errors:
	//
	//	[AuthenticationError]()
	//	[AuthorizationError]()
	//	[AssetGenerationError]()
	//	[HeaderError]()
	//	[InternalError]()
	//	[QuotaError]()
	//	[RequestError]()
	GenerateImages(context.Context, *GenerateImagesRequest) (*GenerateImagesResponse, error)
}

// UnimplementedAssetGenerationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAssetGenerationServiceServer struct {
}

func (*UnimplementedAssetGenerationServiceServer) GenerateText(context.Context, *GenerateTextRequest) (*GenerateTextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateText not implemented")
}
func (*UnimplementedAssetGenerationServiceServer) GenerateImages(context.Context, *GenerateImagesRequest) (*GenerateImagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateImages not implemented")
}

func RegisterAssetGenerationServiceServer(s *grpc.Server, srv AssetGenerationServiceServer) {
	s.RegisterService(&_AssetGenerationService_serviceDesc, srv)
}

func _AssetGenerationService_GenerateText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateTextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetGenerationServiceServer).GenerateText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v22.services.AssetGenerationService/GenerateText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetGenerationServiceServer).GenerateText(ctx, req.(*GenerateTextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AssetGenerationService_GenerateImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetGenerationServiceServer).GenerateImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v22.services.AssetGenerationService/GenerateImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetGenerationServiceServer).GenerateImages(ctx, req.(*GenerateImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AssetGenerationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.ads.googleads.v22.services.AssetGenerationService",
	HandlerType: (*AssetGenerationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateText",
			Handler:    _AssetGenerationService_GenerateText_Handler,
		},
		{
			MethodName: "GenerateImages",
			Handler:    _AssetGenerationService_GenerateImages_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/ads/googleads/v22/services/asset_generation_service.proto",
}
